'use strict';

// Data needed for a later exercise
const flights =
  '_Delayed_Departure;fao93766109;txl2133758440;11:25+_Arrival;bru0943384722;fao93766109;11:45+_Delayed_Arrival;hel7439299980;fao93766109;12:05+_Departure;fao93766109;lis2323639855;12:30';

// Data needed for first part of the section
const restaurant = {
  name: 'Classico Italiano',
  location: 'Via Angelo Tavanti 23, Firenze, Italy',
  categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'],
  starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'],
  mainMenu: ['Pizza', 'Pasta', 'Risotto'],

  openingHours: {
    thu: {
      open: 12,
      close: 22,
    },
    fri: {
      open: 11,
      close: 23,
    },
    sat: {
      open: 0, // Open 24 hours
      close: 24,
    },
  },
  order: function(starterIndex, mainIndex){
    return [this.starterMenu[starterIndex], this.mainMenu[mainIndex]];
  },

  orderDelivery: function({starterIndex = 1, mainIndex = 0,address, time = '20:00'}){
    console.log(`Order received! ${this.starterMenu[starterIndex]} and ${this.mainMenu[mainIndex]} and will be delivered to ${address} at ${time}`);
  },
  orderPasta: function(ing1,ing2,ing3){
    console.log(`Here is your delicious pasta with ${ing1}, ${ing2} and ${ing3}`);
  },
  orderPizza: function(mainIngredient, ...otherIngredients){
    console.log(mainIngredient);
    console.log(otherIngredients);
  }
};

//1)Destructuring

// SPREAD, beacuse on RIGHT  side of =
const arr = [1, 2, ...[3,4]];

// REST, because on LEFT side of = ..CONDENSIG ELEMENTSRF
const [a,b, ...others] = [1,2,3,4,5];
console.log(a,b, others);

//REALIZATION: ...otheerFood(Rest pattern should always come at the end of the array)
const[pizza, , risotto, ...otherFood] = [...restaurant.mainMenu, ...restaurant.starterMenu];
console.log(pizza, risotto, otherFood);

//Objects
//WE ARE ONLY CONCERED WITH THE RESULTS OF ...REST_PARAMTER WHICH WOULD BE AT LAST.
const{sat, ...weekdays} = restaurant.openingHours;
console.log(weekdays);

// 2) Functions
//REALIZATION: REST SYNTAX TAKES MULTIPLES VALUES AND PUTS THEM INTO AN ARRAY
//WHICH IS EXACTLY OPPOSITE OF WHAT ACTION PERFORMED BY SPREAD SYTAX.

const add = function(...numbers){
  let sum = 0;
  for(let i = 0; i < numbers.length; i++){
    sum+=numbers[i];
  }
  console.log( sum);
}
add(1,2,2,4);


const x = [23,5,7];
add(...x);

restaurant.orderPizza('mushroom', 'onion', 'olives','spinach');

// REST PARAMTER UE USE IT WHERE WE WANT TO WRITE VARIABLES SEPRATED BY COMMA
// IN CASE OF SPREAD WE USE IT WHERE WE WANT VALUE SEPRATED BY COMMA
